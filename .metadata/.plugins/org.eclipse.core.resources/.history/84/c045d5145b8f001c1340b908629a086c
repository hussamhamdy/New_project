/*
 * MCP.c
 *
 *  Created on: Feb 16, 2022
 *      Author: Hussam Hamdy
 */

#include "stm32f1xx_hal.h"

#include "MCP.h"

uint8_t MCP2515_U8ReadRegister(uint8_t address){
	uint8_t regVal ;
	uint8_t dummy ;
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_RESET);
	HAL_SPI_TransmitReceive(hspi, INST_READ, &dummy, 1, Timeout);
	HAL_SPI_TransmitReceive(hspi, &address, &dummy, 1, Timeout);
	HAL_SPI_TransmitReceive(hspi, 0, &regVal, 1, Timeout);
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_SET);
	return regVal ;
}

void MCP2515_voidWriteRegister(uint8_t address , uint8_t value){

	uint8_t dummy ;
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_RESET);
	HAL_SPI_TransmitReceive(hspi, INST_WRITE, &dummy, 1, Timeout);
	HAL_SPI_TransmitReceive(hspi, &address, &dummy, 1, Timeout);
	HAL_SPI_TransmitReceive(hspi, &value, &dummy, 1, Timeout);
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_SET);

}

void MCP2515_VidSetBitTiming(uint8_t cnf1Value, uint8_t cnf2Value, uint8_t cnf3Value)
{
	MCP2515_voidWriteRegister(CNF1, cnf1Value);
	MCP2515_voidWriteRegister(CNF2, cnf2Value);
	MCP2515_voidWriteRegister(CNF3, cnf3Value);
}


void MCP2515_voidReset(){

	uint8_t dummy ;
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_RESET);
	HAL_SPI_TransmitReceive(hspi, INST_RESET, &dummy, 1, Timeout);
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_SET);

}

void MCP2515_voidChangeBits(uint8_t address ,uint8_t mask, uint8_t value){

	uint8_t dummy ;
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_RESET);
	HAL_SPI_TransmitReceive(hspi, INST_BIT_MODIFY, &dummy, 1, Timeout);
	HAL_SPI_TransmitReceive(hspi, &address, &dummy, 1, Timeout);
	HAL_SPI_TransmitReceive(hspi, &mask, &dummy, 1, Timeout);
	HAL_SPI_TransmitReceive(hspi, &value, &dummy, 1, Timeout);
	HAL_GPIO_WritePin(CsPort, CsPIN, GPIO_PIN_SET);

}

void MCP2515_voidSetMode(uint8_t mode){
	MCP2515_voidChangeBits(CANCTRL, 0xE0, mode<<5);
	while((MCP2515_U8ReadRegister(CANSTAT)>>5) != mode);
}

